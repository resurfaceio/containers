{{- if .Values.sniffer.enabled -}}
{{- $url := .Values.custom.service.flukeserver.port | default 7701 | printf "http://worker.%s:%v/message" .Release.Namespace -}}
{{- if and .Values.ingress.enabled .Values.ingress.controller.enabled -}}
  {{- $url = printf "http://%s.%s/fluke/message" (include "kubernetes-ingress.fullname" (index .Subcharts "kubernetes-ingress")) .Release.Namespace -}}
{{- end -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "resurface.fullname" . }}-sniffer
  labels:
    {{- include "resurface.labels" . | nindent 4 }}
spec:  
  selector:
    matchLabels:
      {{- include "resurface.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "resurface.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resurface.fullname" . }}-sniffer-sa
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: resurface-logger
        image: resurfaceio/network-sniffer{{ if .Values.sniffer.debug }}-debug:1.0.0{{ else }}:1.3.2{{ end }}
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          capabilities:
            add: [ "NET_ADMIN", "NET_RAW" ]
        env:
        - name: USAGE_LOGGERS_URL
          value: {{ $url }}
        - name: USAGE_LOGGERS_RULES
          value: |
          {{- .Values.sniffer.logger.rules | default "include default" | nindent 12 }}
        - name: USAGE_LOGGERS_DISABLE
          value: {{ not .Values.sniffer.logger.enabled | default nil }}
        {{ $snifferops := include "resurface.sniffer.options" . -}}
        {{ $sniffermirrorops := include "resurface.sniffer.mirror.options" . }}
        {{ if and (empty $snifferops) (empty $sniffermirrorops) }}
        - name: APP_PORT
          value: {{ .Values.sniffer.port | default 80 | quote }}
        - name: VPC_MIRROR_DEVICE
          value: {{ .Values.sniffer.device | default "cbr0" }}
        {{ else -}}
        - name: K8S_INPUT
          {{ if empty $snifferops -}}
          value: {{ print $sniffermirrorops }}
        - name: SNIFFER_ENGINE
          value: "mirror"
        - name: APP_PORTS
          value: {{ join "," .Values.sniffer.vpcmirror.ports | default 80 | quote }}
        - name: SNIFFER_MIRROR_VXLANPORT
          value: {{ default 4789 .Values.sniffer.vpcmirror.vxlanport | quote }}
        - name: SNIFFER_MIRROR_VNIS
          {{ if default "" .Values.provider | eq "aws" | and .Values.sniffer.vpcmirror.enabled .Values.sniffer.vpcmirror.autosetup.enabled -}}
          valueFrom:
            configMapKeyRef:
              name: vnis-config
              key: vnis 
          {{ else -}}
          value: {{ join "," .Values.sniffer.vpcmirror.vnis }}
          {{ end -}}
          {{ else -}}
          value: {{ print $snifferops }}
        - name: SNIFFER_ENGINE
          value: "k8s"
      {{ if not (empty $sniffermirrorops) -}}
      - name: resurface-logger-2
        image: resurfaceio/network-sniffer{{ if .Values.sniffer.debug }}-debug:1.0.0{{ else }}:1.3.2{{ end }}
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          capabilities:
            add: [ "NET_ADMIN", "NET_RAW" ]
        env:
        - name: USAGE_LOGGERS_URL
          value: {{ $url }}
        - name: USAGE_LOGGERS_RULES
          value: |
          {{- .Values.sniffer.logger.rules | default "include default" | nindent 12 }}
        - name: USAGE_LOGGERS_DISABLE
          value: {{ not .Values.sniffer.logger.enabled | default nil }}
        - name: K8S_INPUT
          value: {{ print $sniffermirrorops }}
        - name: SNIFFER_ENGINE
          value: "mirror"
        - name: APP_PORTS
          value: {{ join "," .Values.sniffer.vpcmirror.ports | default 80 | quote }}
        - name: SNIFFER_MIRROR_VXLANPORT
          value: {{ default 4789 .Values.sniffer.vpcmirror.vxlanport | quote }}
        - name: SNIFFER_MIRROR_VNIS
          {{ if default "" .Values.provider | eq "aws" | and .Values.sniffer.vpcmirror.enabled .Values.sniffer.vpcmirror.autosetup.enabled -}}
          valueFrom:
            configMapKeyRef:
              name: vnis-config
              key: vnis 
          {{ else -}}
          value: {{ join "," .Values.sniffer.vpcmirror.vnis }}
          {{ end -}}
      {{- end }}
          {{- end }}
        {{- end }}
{{- end -}}
