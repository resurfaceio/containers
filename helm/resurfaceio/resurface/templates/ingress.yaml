{{- if .Values.ingress.enabled -}}
{{- $provider := default "" .Values.provider -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "resurface.fullname" . }}-ingress
  annotations:
    {{- if eq $provider "ibm-openshift" }}
    route.openshift.io/termination: edge
    haproxy.router.openshift.io/rewrite-target: /
    {{- else }}
    haproxy.org/load-balance: "roundrobin"
    {{- if .Values.ingress.importer.expose }}
    {{- $importerPath := .Values.ingress.importer.path | default "/fluke" }}
    haproxy.org/backend-config-snippet: |
      {{ print "acl no_trailing_slash path -m str " $importerPath }}
      {{ printf "http-request redirect code 301 location %s/ if no_trailing_slash" $importerPath }}
    haproxy.org/path-rewrite: {{ .Values.ingress.importer.path | default "/fluke" }}/(.*) /\1
    {{- end }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.autoissue.enabled }}
    cert-manager.io/issuer: {{ .Values.ingress.tls.autoissue.staging | ternary "-staging" "" | print (include "resurface.fullname" .) "-letsencrypt" }}
    {{- end }}
spec:
  {{- if ne $provider "ibm-openshift" }}
  ingressClassName: haproxy
  {{- end }}
  rules:
    - http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: coordinator
                port:
                  name: db-svcport
          {{- if .Values.ingress.importer.expose }}
          - path: {{ .Values.ingress.importer.path | default "/fluke" | quote }}
            pathType: Prefix
            backend:
              service:
                name: worker
                port:
                  name: fluke-svcport
          {{- end }}
      {{ if .Values.ingress.tls.enabled -}}
      host: {{ required "A fully qualified domain name is needed when TLS is enabled" .Values.ingress.tls.host }}
      {{- else if eq $provider "ibm-openshift" -}}
      host: {{ include "resurface.fullname" . }}.{{ required "The value ingress.tls.host must be set with the ingress subdomain name when running on OpenShift" .Values.ingress.tls.host }}
      {{- end }}
  {{- if and .Values.ingress.tls.enabled (ne $provider "ibm-openshift") }}
  tls:
    - secretName: {{ .Values.ingress.tls.byoc.secretname | default (printf "%s-tls" (include "resurface.fullname" . )) }}
      hosts:
        - {{ .Values.ingress.tls.host }}
  {{- end }}
{{- if eq $provider "ibm-openshift" | and .Values.iceberg.enabled .Values.minio.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "resurface.fullname" . }}-minio-ingress
  annotations:
    route.openshift.io/termination: edge
    haproxy.router.openshift.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ printf "%s-minio-console" .Release.Namespace }}
                port:
                  name: http
      host: {{ include "resurface.fullname" . }}-minio.{{ required "The value ingress.tls.host must be set with the ingress subdomain name when running on OpenShift" .Values.ingress.tls.host }}
{{- end }}
{{- end }}
