{{- $tlsenabled := or .Values.ingress.tls.enabled (eq (default "" .Values.provider) "ibm-openshift") -}}

Resurface has been successfully {{ if .Release.IsInstall }}installed{{ else if .Release.IsUpgrade }}upgraded{{end}}.

· Your helm release is named {{ .Release.Name }}.
· You are running Resurface version {{ .Chart.AppVersion }} in {{ if .Values.multinode.enabled }}multi{{ else }}single{{end}}-node configuration.
{{- if .Values.multinode.enabled }}
· Number of worker nodes: {{ .Values.multinode.workers }}
{{- end }}
· Iceberg storage is
{{- if .Values.iceberg.enabled }} enabled using
{{- if .Values.minio.enabled }} MinIO as object storage provider.
  · MinIO configuration: {{ .Values.minio.mode }}
  · Number of MinIO nodes: {{ .Values.minio.replicas }}
  · Size of MinIO volume per node: {{ .Values.minio.persistence.size }}
  {{- $dbSize := .Values.custom.config.dbsize | default 3 | int -}}
  {{- $minioSize := .Values.minio.persistence.size | trimSuffix "Gi" | int -}}
  {{- if lt (mul $minioSize .Values.minio.replicas) (mul $dbSize (ternary .Values.multinode.workers 1 .Values.multinode.enabled)) }}
    WARNING: Iceberg overall storage size is less than Resurface DB size. Depending on the payload size and capture rate, this could result in a OOS exception. It is recommended to increase storage size or number of nodes for MinIO.
  {{ end -}}
  {{- if eq .Values.minio.consoleService.type "LoadBalancer" }}
  · You can get the URL to access your MinIO console by running the following command:

echo http://$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "minio.fullname" .Subcharts.minio }}-console --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}"){{ if ne (int .Values.minio.consoleService.port) 80 }}:{{ .Values.minio.consoleService.port | default 9001 }}{{ end }}/

  {{- end }}
{{- end }}
{{- if .Values.iceberg.s3.enabled -}} using external AWS S3 bucket as object storage provider.
  · AWS S3 bucket name: {{ .Values.iceberg.s3.bucketname }}
  · AWS S3 region: {{ .Values.iceberg.s3.awsregion }}
{{- end }}
{{- else }} disabled.
{{- end }}
{{ if .Values.ingress.enabled }}
· TLS is{{ if not $tlsenabled }} not{{ end }} enabled.
· Authentication is{{ if and $tlsenabled .Values.auth.enabled }} enabled.
  · Basic auth is{{ if not .Values.auth.basic.enabled }} not{{end}} enabled.
  · JWT auth is{{ if not .Values.auth.jwt.enabled }} not{{end}} enabled.
  · OAuth 2.0 is{{ if not .Values.auth.oauth2.enabled }} not{{end}} enabled.
{{- else }} not enabled. {{ end }}
{{- end }}

· Use the following command to list all the resources deployed with this release:

helm get all {{ .Release.Name }} -n {{ .Release.Namespace }}
{{ if and .Values.ingress.enabled $tlsenabled }}
· You can find the UI for your Resurface instance here: https://{{ .Values.ingress.tls.host }}/ui
{{- else if .Values.ingress.enabled }}

· Once the EXTERNAL IP for the Ingress Controller has been assigned, you can get the URL of the UI for your Resurface instance by running the following command:

echo http://$(kubectl get svc {{ include "resurface.fullname" . }}-kubernetes-ingress --namespace {{ .Release.Namespace }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")/ui

{{- else }}
· You can get the URL of the UI for your Resurface instance by running the following command:

echo http://$(kubectl get svc --namespace {{ .Release.Namespace }} coordinator --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}"){{ if ne (int .Values.custom.service.apiexplorer.port) 80 }}:{{ .Values.custom.service.apiexplorer.port | default 7700 }}{{ end }}/
{{- end }}

· Use the following command to print this status page again:

helm status {{ .Release.Name }} -n {{ .Release.Namespace }}

{{ if .Values.sniffer.enabled -}}
· Network packet sniffing logger is ENABLED.
{{ if not (empty (include "resurface.sniffer.mirror.options" .)) }}
  · AWS VPC Mirroring is ENABLED
  {{- if .Values.provider | default "" | eq "aws" | and .Values.sniffer.enabled .Values.sniffer.vpcmirror.enabled .Values.sniffer.vpcmirror.autosetup.enabled }}
    
· VPC Mirror Sessions are being updated. Run the following command to know the current VNIs at any point:

kubectl get configmap/vnis-config -n resurface -o yaml
  {{- else }}
    VNIS: {{ join ", " .Values.sniffer.vpcmirror.vnis }}
  {{- end }}
{{ end }}
{{ if and (empty (include "resurface.sniffer.mirror.options" .)) (empty (include "resurface.sniffer.options" .)) }}
  NOTE: NO services, pods, or labels were specified and discovery is DISABLED.
  This might result in unexpected behavior. Please, specifiy at least one service, pod or label, or enable service discovery.
  For more information use the following command:

helm show readme resurfaceio/resurface
{{ end }}
{{- end }}

{{ if .Values.consumer.azure.enabled -}}
· Azure API Management logger is ENABLED.
{{- end }}

{{ if .Values.consumer.aws.enabled -}}
· AWS API Gateway logger is ENABLED.
{{- end }}
