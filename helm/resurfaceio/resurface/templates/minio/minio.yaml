{{- if and .Values.iceberg.enabled (eq .Values.iceberg.provider "minio") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "resurface.fullname" . }}-minio
  labels:
    {{- include "resurface.labels" . | nindent 4 }}
spec:
  serviceName: minio-api
  replicas: {{ .Values.iceberg.minio.nodes | default 1 }}
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      {{- include "resurface.selectorLabels" . | nindent 6 }}
      iceberg.resurface.io/role: minio
  template:
    metadata:
      labels:
        {{- include "resurface.selectorLabels" . | nindent 8 }}
        iceberg.resurface.io/role: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          imagePullPolicy: Always
          ports:
            - name: minio-web
              containerPort: 9001
            - name: minio-api
              containerPort: 9000
          volumeMounts:
            - name: {{ include "resurface.fullname" . }}-minio-pvc
              mountPath: /data
          env:
            - name: MINIO_ACCESS_KEY
              value: {{ .Values.iceberg.secrets.accesskey }}
            - name: MINIO_SECRET_KEY
              value: {{ .Values.iceberg.secrets.secretkey }}
          args:
            - "server"
            - "--console-address"
            - ":9001" 
            - "{{ if gt (default .Values.iceberg.minio.nodes 1) 1 }}{{ .Values.iceberg.minio.service.api.port | default 9000 | printf "http://%s-minio-{0...%d}.minio-api.%s:%v" (include "resurface.fullname" .) .Values.iceberg.minio.nodes (.Release.Namespace) }}{{ end }}/data"
  volumeClaimTemplates:
    - metadata:
        name: {{ include "resurface.fullname" . }}-minio-pvc
      spec:
        {{- $scndict := dict "azure" "managed-csi" "aws" "gp2" "gcp" "standard" }}
        {{- $scn := (.Values.custom.storage.classname | default (get $scndict (toString .Values.provider))) }}
        {{- if not (empty $scn) }}
        storageClassName: {{ $scn }}
        {{- end }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ include "resurface.minio.pvc.size" . }}
---
{{- if .Values.iceberg.minio.bucketcreator.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "resurface.fullname" . }}-bucket-creator
  labels:
    {{- include "resurface.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: create-iceberg-bucket
      labels:
        {{- include "resurface.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: resurface-sa
      securityContext:
        runAsUser: 1000
      restartPolicy: Never
      containers:
        - name: minio-client
          image: ramonmarquez/bucketcreator:latest
          env:
            - name: S3_URL
              value: {{ .Values.iceberg.minio.service.api.port | default 9000 | printf "%s-minio-0.minio-api.%s:%v" (include "resurface.fullname" .) (.Release.Namespace) }}
            - name: S3_ACCESS_KEY
              value: {{ .Values.iceberg.secrets.accesskey }}
            - name: S3_SECRET_KEY
              value: {{ .Values.iceberg.secrets.secretkey }}
            - name: DELAY_MIN
              value: "0"
            - name: DELAY_S
              value: "30"
{{- end -}}
{{- end }}
