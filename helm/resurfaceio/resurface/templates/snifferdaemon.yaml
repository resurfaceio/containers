{{- if .Values.sniffer.enabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "resurface.fullname" . }}-sniffer
  labels:
    {{- include "resurface.labels" . | nindent 4 }}
spec:  
  selector:
    matchLabels:
      {{- include "resurface.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "resurface.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resurface.fullname" . }}-sniffer-sa
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: resurface-logger
        image: resurfaceio/network-sniffer{{ if .Values.sniffer.debug }}-debug:1.0.0{{ else }}:1.2.0{{ end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: USAGE_LOGGERS_URL
          value: {{ .Values.custom.service.flukeserver.port | default 7701 | printf "http://worker.%s:%v/message" (.Release.Namespace) }}
        - name: USAGE_LOGGERS_RULES
          value: |
          {{- .Values.sniffer.logger.rules | default "include default" | nindent 12 }}
        - name: USAGE_LOGGERS_DISABLE
          value: {{ not .Values.sniffer.logger.enabled | default nil }}
        {{ $snifferops := include "resurface.sniffer.options" . -}}
        {{- if empty $snifferops -}}
        - name: APP_PORT
          value: {{ .Values.sniffer.port | default 80 | quote }}
        - name: VPC_MIRROR_DEVICE
          value: {{ .Values.sniffer.device | default "cbr0" }}
        {{- else -}}
        - name: K8S_INPUT
          value: {{ print $snifferops }}
        {{- end -}}
{{- end -}}
